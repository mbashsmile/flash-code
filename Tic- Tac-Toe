#include <stdio.h>

char board[3][3]; // 3x3 Tic-Tac-Toe board

// Initialize the board with empty spaces
void initialize_board() {
    for(int i = 0; i < 3; i++) {
        for(int j = 0; j < 3; j++) {
            board[i][j] = ' ';
        }
    }
}

// Display the current state of the board
void display_board() {
    printf(" %c | %c | %c\n", board[0][0], board[0][1], board[0][2]);
    printf("---|---|---\n");
    printf(" %c | %c | %c\n", board[1][0], board[1][1], board[1][2]);
    printf("---|---|---\n");
    printf(" %c | %c | %c\n", board[2][0], board[2][1], board[2][2]);
}

// Check if there is a winner
char check_winner() {
    // Check rows
    for(int i = 0; i < 3; i++) {
        if(board[i][0] == board[i][1] && board[i][1] == board[i][2] && board[i][0] != ' ') {
            return board[i][0];
        }
    }
    // Check columns
    for(int j = 0; j < 3; j++) {
        if(board[0][j] == board[1][j] && board[1][j] == board[2][j] && board[0][j] != ' ') {
            return board[0][j];
        }
    }
    // Check diagonals
    if(board[0][0] == board[1][1] && board[1][1] == board[2][2] && board[0][0] != ' ') {
        return board[0][0];
    }
    if(board[0][2] == board[1][1] && board[1][1] == board[2][0] && board[0][2] != ' ') {
        return board[0][2];
    }
    // If no winner yet
    return ' ';
}

int main() {
    initialize_board();
    int row, col;
    char player = 'X';
    char winner = ' ';
    
    // Game loop
    for(int i = 0; i < 9 && winner == ' '; i++) {
        printf("Player %c's turn.\n", player);
        printf("Enter row (0-2): ");
        scanf("%d", &row);
        printf("Enter column (0-2): ");
        scanf("%d", &col);
        
        // Check if the cell is empty
        if(board[row][col] == ' ') {
            board[row][col] = player;
            display_board();
            winner = check_winner();
            // Switch player
            if(player == 'X') {
                player = 'O';
            } else {
                player = 'X';
            }
        } else {
            printf("Cell already occupied. Try again.\n");
            i--; // Decrement i to allow the current player to try again
        }
    }
    
    // Check winner or tie
    if(winner == 'X' || winner == 'O') {
        printf("Player %c wins!\n", winner);
    } else {
        printf("It's a tie!\n");
    }
    
    return 0;
}
